"""
This code defines a class which compiles a given TeX file into a PDF.
"""

# Standard imports.
import subprocess
from pathlib import Path

# Local imports.
from .constants import DEFAULT_LATEX_COMMAND, DEFAULT_STEM, TEX_EXT, PDF_EXT

# Local constants.
EXTENSIONS_TO_KEEP = (TEX_EXT, PDF_EXT)

##############
# MAIN CLASS #
##############

class TexCompiler:
    """ The class in question. """
    def __init__(
            self,
            path_to_tex=DEFAULT_STEM+TEX_EXT,
            latex_command=DEFAULT_LATEX_COMMAND
        ):
        self.path_to_tex = path_to_tex
        self.latex_command = latex_command

    def compile_only(self):
        """ Compile TeX to PDF. """
        command = [self.latex_command, self.path_to_tex]
        subprocess.run(command, check=True)
        subprocess.run(command, check=True)

    def clean(self):
        """ Remove the unused files generated by the compilation processes. """
        path_obj_to_tex = Path(self.path_to_tex)
        pattern = Path().glob(path_obj_to_tex.stem+".*")
        for path_obj in pattern:
            if path_obj.suffix not in EXTENSIONS_TO_KEEP:
                path_obj.unlink()

    def compile(self):
        """ Compile AND clean. """
        self.compile_only()
        self.clean()
